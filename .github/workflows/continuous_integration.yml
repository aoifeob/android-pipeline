name: Continuous Integration

on:
  pull_request:
    branches:
      - main
      - release/*
      - feature/*
    paths-ignore:
      - '*.md'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Decrypt Firebase and Google Services secrets
        run: |
          chmod +x script/decrypt.sh
          script/decrypt.sh
        env:
          GOOGLE_SERVICES_KEY: ${{ secrets.GOOGLE_SERVICES_KEY }}
          FIREBASE_SERVICE_ACC: ${{ secrets.FIREBASE_SERVICE_ACC }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Perform static analysis
        run: ./gradlew detekt

      - name: Upload detekt build report
        uses: actions/upload-artifact@v4
        with:
          name: detekt_results
          path: app/build/reports/detekt/detekt.html

      - name: Build with Gradle
        run: ./gradlew assemble

  run-unit-tests:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java from Build Cache
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: gradle

      - name: Decrypt Firebase and Google Services secrets
        run: |
          chmod +x script/decrypt.sh
          script/decrypt.sh
        env:
          GOOGLE_SERVICES_KEY: ${{ secrets.GOOGLE_SERVICES_KEY }}
          FIREBASE_SERVICE_ACC: ${{ secrets.FIREBASE_SERVICE_ACC }}

      - name: Run Unit Tests with Gradle
        run: gradle app:testDebugUnitTest

  run-codeql-security-scan:
    needs: build
    secrets: inherit
    uses: ./.github/workflows/codeql-security-scan.yml

  run-trufflehog-security-scan:
    needs: build
    uses: ./.github/workflows/trufflehog-security-scan.yml

  notify-success:
    needs: [ build, run-unit-tests, run-codeql-security-scan, run-gitleaks-security-scan ]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C074WKL8J66'
          slack-message: ":eyes: Pull request ready for review\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACKBOT_OAUTH_TOKEN }}

  notify-failure:
    if: ${{ always() && contains(join(needs.*.result, ','), 'failure') }}
    needs: [ build, run-unit-tests, run-codeql-security-scan, run-gitleaks-security-scan ]
    runs-on: ubuntu-latest
    steps:
      - name: Send Slack Notification
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: 'C074WKL8J66'
          slack-message: ":warning: Pull request has failed CI\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACKBOT_OAUTH_TOKEN }}